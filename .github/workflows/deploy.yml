## GitHub Actions 대시보드에 표시될 워크플로 이름
name: EC2 Deploy
## 실행 시 "Deploy to [대상] by @사용자명" 형식으로 표시
run-name: Deploy to ${{ inputs.deploy_target }} by @${{ github.actor }}

## 트리거 설정 (이벤트 발생 시 워크플로 실행)
on:
  push:
    branches: [ "main", "feature/terraform" ]  ## main 브랜치에 push 이벤트 발생 시 실행
#  pull_request:         ## 주석 해제 시 main 브랜치 PR 이벤트로도 실행
#    branches: [ "main" ]

env:
  BASTION: 3.34.255.54
  APPS: 10.0.4.134, 10.0.4.52
  AWS_ROLE_ARN: arn:aws:iam::350386634560:role/github-actions-deploy-role
  AWS_REGION: ap-northeast-2
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build:
    ## 깃헙 호스티드
    runs-on: ubuntu-latest
    permissions:
      id-token: write     # ✅ OIDC 인증을 위해 GitHub가 ID 토큰을 발급받을 수 있도록 허용
      contents: read      # ✅ (예: 코드 checkout 등) 리포지토리의 내용을 읽을 수 있도록 허용

    steps:
      ## 저장소 코드 체크아웃 (필수 초기 단계)
      - uses: actions/checkout@v4  ## 버전 v4의 공식 체크아웃 액션 사용

      ## ubuntu 서버에 java를 설치하기 때문에 필요하지 않다 생각되어 주석
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      ## java 버전 확인
      - name: Check Java Version
        run: java -version

      ## gradle의 실행권한 부여와 build 수행
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      ## Gradle 빌드
      - name: Build with Gradle
        run: ./gradlew clean build --exclude-task test

      # AWS Credentials
      - name: Configure AWS credentials 🔑
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      # ECR 로그인
      - name: Login to Amazon ECR
        id: ecr
        uses: aws-actions/amazon-ecr-login@v2

      # ECR 설치
      - name: Setup ECR Repository
        uses: deploy-actions/setup-ecr@v1
        with:
          RepositoryName: ecr

      # Docker buildx Setup
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker # 이거를 설정해야 자동으로 멀티 플랫폼 manifest가 만들어지지 않는다. (명시 해줘야함)

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64
          tags: ${{ steps.ecr.outputs.registry }}/ecr:${{ env.IMAGE_TAG }}

  deploy:
    runs-on: ubuntu-latest
    needs: [ build ] ## build가 수행되어야만 deploy가 수행
    permissions:
      id-token: write     # ✅ OIDC 인증을 위해 GitHub가 ID 토큰을 발급받을 수 있도록 허용
      contents: read      # ✅ (예: 코드 checkout 등) 리포지토리의 내용을 읽을 수 있도록 허용
    steps:
      # AWS 로그인
      - name: Configure AWS credentials 🔑
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Start CodeDeploy
        run: |
          aws deploy create-deployment \
              --application-name shinemuscat-codedeploy-app \
              --deployment-group-name shinemuscat-deployment-group \
              --github-location repository=${{ github.repository }},commitId=${{ github.sha }} \
              --description "Auto-deploy from ${{ github.ref_name }}"