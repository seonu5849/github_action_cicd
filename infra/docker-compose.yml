name: github_action

# x- : 실행용이 아닌 참조용을 속성을 나타내는 Docker-Compose 속성
# &, *, << : YAML 속성. *config는 &config를 참조, <<은 *로 가져온 속성 병합 시 사용
x-ubuntu-server: &ubuntu-container-settings
  build:
    context: . # Dockerfile이 있는 경로
    dockerfile: UbuntuDockerfile # 파일명이 Dockerfile이 아닐 경우 파일명 기입
  user: "1000:1000" #접속하고자 하는 user의 gid를 입력 (1000:1000 에 해당하는 유저로 접속)
  working_dir: /home/ubuntu # 컨테이너 접속 기본 경로 설정
  deploy:
    resources:
      limits: #EC2 t2.micro
        cpus: "1.0" # 컨테이너가 사용할 수 있는 CPU의 최대 비율 (1.0 -> 1개의 전체 CPU코어를 사용하도록 제한)
        memory: "1g" #컨테이너가 사용할 수 있는 메모리의 최대 크기 (메모리를 1GB로 제한)
  tty: true # 컨테이너에 가상터미널(TTY)을 활성화, 쉘(Shell)이나 명령줄 인터페이스(CLI)와 상호작용하는데 필요

# services settings
services:
  postgresql:
    container_name: postgresql
    image: docker.io/bitnami/postgresql:17
    ports:
      - '5432:5432'
    volumes:
      - postgresql_data:/bitnami/postgresql
      #- /docker-entrypoint-initdb.d
      #- /docker-entrypoint-preinitdb.d
    environment:
      POSTGRESQL_DATABASE: postgres
      POSTGRESQL_USERNAME: postgres
      POSTGRESQL_PASSWORD: 1234
  cicd:
    container_name: cicd
    platform: linux/amd64 # mac 에서 rosetta 오류로 인해 추가
    <<: *ubuntu-container-settings
    volumes:
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock  # 호스트의 docker.sock을 컨테이너로 공유
  app-1:
    container_name: app-1
    privileged: true
    ports:
      - '8081:8080'
    <<: *ubuntu-container-settings
  app-2:
    container_name: app-2
    privileged: true
    ports:
      - '8082:8080'
    <<: *ubuntu-container-settings

volumes:
  postgresql_data:

networks:
  shinemuscat:
    external: true