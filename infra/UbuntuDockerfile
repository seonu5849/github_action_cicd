# ubuntu 이미지를 바탕으로
FROM ubuntu:24.04

#root user로 수행
USER root

#sudo, vim 라이브러리 설치
RUN apt-get update && apt-get install sudo vim -y

# temurin-21 JDK 설치
RUN sudo apt install -y wget apt-transport-https gpg
&& sudo wget -qO - https://packages.adoptium.net/artifactory/api/gpg/key/public | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/adoptium.gpg > /dev/null
&& echo "deb https://packages.adoptium.net/artifactory/deb $(awk -F= '/^VERSION_CODENAME/{print$2}' /etc/os-release) main" | sudo tee /etc/apt/sources.list.d/adoptium.list
    deb https://packages.adoptium.net/artifactory/deb noble main
&& sudo apt update
&& sudo apt install temurin-21-jdk -y

# docker 설치
RUN for pkg in docker.io docker-doc docker-compose docker-compose-v2 podman-docker containerd runc; do sudo apt-get remove $pkg; done
&& sudo apt install curl -y
&& sudo apt-get update
   sudo apt-get install ca-certificates curl
   sudo install -m 0755 -d /etc/apt/keyrings
   sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
   sudo chmod a+r /etc/apt/keyrings/docker.asc

   # Add the repository to Apt sources:
   echo \
     "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
     $(. /etc/os-release && echo "${UBUNTU_CODENAME:-$VERSION_CODENAME}") stable" | \
     sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
   sudo apt-get update
&& sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin -y


# 'ubuntu' 사용자에게 모든 명령어에 대해 비밀번호 없이 sudo 권한을 주기 위해 sudoers 파일 수정
RUN echo "ubuntu ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers

#기본 명령어로 bash 실행
CMD ["/bin/bash"]